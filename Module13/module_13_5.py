# -*- coding: utf-8 -*-

# –¶–µ–ª—å: –Ω–∞—É—á–∏—Ç—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –Ω–∏—Ö –≤ Telegram-bot.
#
# –ó–∞–¥–∞—á–∞ "–ú–µ–Ω—å—à–µ —Ç–µ–∫—Å—Ç–∞, –±–æ–ª—å—à–µ –∫–ª–∏–∫–æ–≤":
# –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ–¥ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –∑–∞–¥–∞—á–∏, —á—Ç–æ–±—ã –≤–æ–ø—Ä–æ—Å—ã –æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö —Ç–µ–ª–∞
# –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –∫–∞–ª–æ—Ä–∏–π –≤—ã–¥–∞–≤–∞–ª–∏—Å—å –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏.
# –ò–∑–º–µ–Ω–∏—Ç–µ massage_handler –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ set_age. –¢–µ–ø–µ—Ä—å —ç—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ç–µ–∫—Å—Ç '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å',
# –∞ –Ω–µ –Ω–∞ 'Calories'.
# –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É ReplyKeyboardMarkup –∏ 2 –∫–Ω–æ–ø–∫–∏ KeyboardButton –Ω–∞ –Ω–µ–π —Å–æ —Å–ª–µ–¥—É—é—â–∏–º —Ç–µ–∫—Å—Ç–æ–º:
# '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å' –∏ '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'. –°–¥–µ–ª–∞–π—Ç–µ —Ç–∞–∫, —á—Ç–æ–±—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Å—Ç—Ä–∞–∏–≤–∞–ª–∞—Å—å –ø–æ–¥ —Ä–∞–∑–º–µ—Ä—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
# –ø—Ä–∏ –ø–æ–º–æ—â–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ resize_keyboard.
# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞–Ω–µ–µ —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –æ—Ç–≤–µ—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ start, –∏—Å–ø–æ–ª—å–∑—É—è –ø–∞—Ä–∞–º–µ—Ç—Ä reply_markup.
# –í –∏—Ç–æ–≥–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /start —É –≤–∞—Å –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏—Å—ã–ª–∞—Ç—å—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–≤—É–º—è –∫–Ω–æ–ø–∫–∞–º–∏.
# –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å –Ω–∞–¥–ø–∏—Å—å—é '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å' —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è set_age
# —Å –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è age, growth –∏ weight.


from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.dispatcher import FSMContext
import asyncio


api = ""
bot = Bot(token=api)
dp = Dispatcher(bot, storage=MemoryStorage())
kb1 = ReplyKeyboardMarkup(resize_keyboard=True)
kb2 = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
button_hi = KeyboardButton('/start üëã')
button1 = KeyboardButton(text='–†–∞—Å—Å—á–∏—Ç–∞—Ç—å')
button2 = KeyboardButton(text='–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
kb1.row(button1, button2)
kb2.add(button_hi)


class UserState(StatesGroup):
    gender = State()  # –ø–æ–ª
    age = State()  # –≤–æ–∑—Ä–∞—Å—Ç
    growth = State()  # —Ä–æ—Å—Ç
    weight = State()  # –≤–µ—Å


@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply("–ù–∞–∂–º–∏—Ç–µ '–†–∞—Å—Å—á–∏—Ç–∞—Ç—å'", reply_markup=kb1)


@dp.message_handler(text=['–†–∞—Å—Å—á–∏—Ç–∞—Ç—å'])
async def set_gender(message):
    await message.answer('—Ä–∞—Å—á–µ—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–µ –±–∞–∑–æ–≤–æ–≥–æ –æ–±–º–µ–Ω–∞ –≤–µ—â–µ—Å—Ç–≤ –ú–∏—Ñ—Ñ–ª–∏–Ω–∞-–°–∞–Ω –ñ–µ–æ—Ä–∞')
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø–æ–ª –º—É–∂/–∂–µ–Ω:')
    await UserState.gender.set()


@dp.message_handler(state=UserState.gender)
async def set_age(message, state):
    await state.update_data(gender=message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç:')
    await UserState.age.set()


@dp.message_handler(state=UserState.age)
async def set_growth(message, state):
    await state.update_data(age=message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π —Ä–æ—Å—Ç:')
    await UserState.growth.set()


@dp.message_handler(state=UserState.growth)
async def set_weight(message, state):
    await state.update_data(growth=message.text)
    await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–µ—Å:')
    await UserState.weight.set()


@dp.message_handler(state=UserState.weight)
async def send_calories(message, state):
    await state.update_data(weight=message.text)
    data = await state.get_data()
    if data['gender'] == "–º—É–∂":
        calorie_allowance = ((10 * int(data['weight'])) + (6.25 * int(data['growth'])) - (4.92 * int(data['age'])) + 5)
    if data['gender'] == "–∂–µ–Ω":
        calorie_allowance = ((10 * int(data['weight'])) + (6.25 * int(data['growth'])) - (4.92 * int(data['age'])) - 161)
    await message.answer(f'–í–∞—à–∞ –Ω–æ—Ä–º–∞ –∫–∞–ª–æ—Ä–∏–π {calorie_allowance}')
    await state.finish()


@dp.message_handler()
async def all_message(message):
    await message.reply("'–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–º–æ–≥–∞—é—â–∏–π —Ç–≤–æ–µ–º—É –∑–¥–æ—Ä–æ–≤—å—é.'", reply_markup=kb2)
    await message.answer('–ù–∞–∂–º–∏—Ç–µ –Ω–∞ start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.')

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)